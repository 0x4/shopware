<?xml version='1.0' ?>
<project name="jmeter-jenkins-integration" default="build" basedir=".">

    <!--
        Define jmeter task with bundled *.jar file
    -->
    <taskdef name="jmeter"
             classpath="${basedir}/lib/ant-jmeter.jar"
             classname="org.programmerplanet.ant.taskdefs.jmeter.JMeterTask" />

    <!--
        Load optional properties file with private credentials
    -->
    <property file="${basedir}/private.properties" />

    <!--
        Includes the project specific runtime settings
    -->
    <target name="-settings-init"
            depends="-settings-validate,
                     -settings-init-default,
                     -settings-init-custom">

        <property name="local.project.data.dir" location="${project.dir}/data/" />
        <property name="remote.project.data.dir" location="${remote.basedir}/${project.dir}/data/" />

        <property file="${project.dir}/project.properties" />
    </target>

    <!--
        Load the default build settings relevant for all jmeter tests
    -->
    <target name="-settings-init-default" unless="project.properties">
        <property file="${basedir}/build.properties" />
    </target>

    <!--
        Load a custom set of build settings relevant for all jmeter tests
    -->
    <target name="-settings-init-custom" if="project.properties">
        <property file="${basedir}/${project.properties}" />
    </target>

    <!--
        Validates that the user has passed the required cli arguments
    -->
    <target name="-settings-validate"
            depends="-settings-validate-project-dir" />

    <!--
        Validates that the mandatory project directory was passed
    -->
    <target name="-settings-validate-project-dir"
            unless="project.dir">
        <fail message="Missing mandatory -Dproject.dir=&lt;dir&gt; option" />
    </target>

    <target name="update" depends="clean">
        <exec executable="ssh" failonerror="true">
            <arg value="${remote.user}@${app.host}" />
            <arg value="cd ${remote.path} ; rm -rf cache/templates/* ; rm -rf cache/database/* ; svn up ; cd _build ; ant build-unit -Dapp.host=${app.host} -Dapp.path=${app.path} -Ddb.user=${db.user} -Ddb.password=${db.password} -Ddb.host=${db.host} -Ddb.name=${db.name}" />
        </exec>
    </target>

    <target name="prepare" depends="clean">
        <mkdir dir="${local.builddir}" />
        <mkdir dir="${local.result.dir}" />
    </target>

    <target name="clean" depends="-settings-init">
        <delete includeemptydirs="true">
            <fileset dir="${local.builddir}">
                <include name="**/*.*" />
                <exclude name=".svn/**/*.*" />
            </fileset>
        </delete>
    </target>

    <!--
        Hidden target that directly executes jmeter
    -->
    <target name="jmeter" depends="-settings-init,-start-jmeter" />

    <target name="-start-jmeter">
        <antcall target="-start-jmeter-before-hook" />

        <jmeter jmeterhome="${local.jmeter.home.dir}"
                resultlog="${local.jmeter.log.file}"
                testplan="${local.jmeter.test.dir}/${jmeter.file}">

            <property name="jmeter.web.path" value="${jmeter.web.path}" />

            <property name="jmeter.data.dir" value="${local.project.data.dir}" />
            <property name="jmeter.rampup.time" value="${jmeter.rampup.time}" />
            <property name="jmeter.execution.time" value="${jmeter.execution.time}" />

            <property name="jmeter.users.random.known" value="${jmeter.users.random.known}" />
            <property name="jmeter.users.random.unknown" value="${jmeter.users.random.unknown}" />
            <property name="jmeter.users.trigger.order" value="${jmeter.users.trigger.order}" />
            <property name="jmeter.users.trigger.registration" value="${jmeter.users.trigger.registration}" />
            <property name="jmeter.users.trigger.search" value="${jmeter.users.trigger.search}" />
            <property name="jmeter.users.trigger.searchajax" value="${jmeter.users.trigger.searchajax}" />
        </jmeter>

        <antcall target="-start-jmeter-after-hook" />
    </target>

    <!--
        Hook target that will be called right before we start jmeter.
    -->
    <target name="-start-jmeter-before-hook" />

    <!--
        Hook target that will be called when the jmeter test has finished.
    -->
    <target name="-start-jmeter-after-hook" />

</project>
